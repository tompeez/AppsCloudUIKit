package oracle.apps.uikit;

import java.math.BigDecimal;

import oracle.jbo.AttributeList;
import oracle.jbo.Key;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.TransactionEvent;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Tue Feb 21 17:18:12 CET 2017
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class UsersImpl extends EntityImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        Userid,
        Firstname,
        Lastname,
        Userpwd;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }
    public static final int USERID = AttributesEnum.Userid.index();
    public static final int FIRSTNAME = AttributesEnum.Firstname.index();
    public static final int LASTNAME = AttributesEnum.Lastname.index();
    public static final int USERPWD = AttributesEnum.Userpwd.index();

    /**
     * This is the default constructor (do not remove).
     */
    public UsersImpl() {
    }

    /**
     * Gets the attribute value for Userid, using the alias name Userid.
     * @return the value of Userid
     */
    public BigDecimal getUserid() {
        return (BigDecimal) getAttributeInternal(USERID);
    }

    /**
     * Sets <code>value</code> as the attribute value for Userid.
     * @param value value to set the Userid
     */
    public void setUserid(BigDecimal value) {
        setAttributeInternal(USERID, value);
    }

    /**
     * Gets the attribute value for Firstname, using the alias name Firstname.
     * @return the value of Firstname
     */
    public String getFirstname() {
        return (String) getAttributeInternal(FIRSTNAME);
    }

    /**
     * Sets <code>value</code> as the attribute value for Firstname.
     * @param value value to set the Firstname
     */
    public void setFirstname(String value) {
        setAttributeInternal(FIRSTNAME, value);
    }

    /**
     * Gets the attribute value for Lastname, using the alias name Lastname.
     * @return the value of Lastname
     */
    public String getLastname() {
        return (String) getAttributeInternal(LASTNAME);
    }

    /**
     * Sets <code>value</code> as the attribute value for Lastname.
     * @param value value to set the Lastname
     */
    public void setLastname(String value) {
        setAttributeInternal(LASTNAME, value);
    }

    /**
     * Gets the attribute value for Userpwd, using the alias name Userpwd.
     * @return the value of Userpwd
     */
    public String getUserpwd() {
        return (String) getAttributeInternal(USERPWD);
    }

    /**
     * Sets <code>value</code> as the attribute value for Userpwd.
     * @param value value to set the Userpwd
     */
    public void setUserpwd(String value) {
        setAttributeInternal(USERPWD, value);
    }

    /**
     * @param userid key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(BigDecimal userid) {
        return new Key(new Object[] { userid });
    }

    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        return EntityDefImpl.findDefObject("oracle.apps.uikit.Users");
    }

    /**
     * Add attribute defaulting logic in this method.
     * @param attributeList list of attribute names/values to initialize the row
     */
    protected void create(AttributeList attributeList) {
        super.create(attributeList);
    }

    /**
     * Add entity remove logic in this method.
     */
    public void remove() {
        super.remove();
    }

    /**
     * Add locking logic here.
     */
    public void lock() {
        super.lock();
    }

    /**
     * Custom DML update/insert/delete logic here.
     * @param operation the operation type
     * @param e the transaction event
     */
    protected void doDML(int operation, TransactionEvent e) {
        super.doDML(operation, e);
    }
}

